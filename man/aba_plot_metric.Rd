% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aba_plot.R
\name{aba_plot_metric}
\alias{aba_plot_metric}
\title{Plot metrics of an aba model summary}
\usage{
aba_plot_metric(
  object,
  metric = NULL,
  axis = c("predictor", "outcome", "group"),
  coord_flip = FALSE,
  include_basic = TRUE,
  sort = FALSE,
  palette = "jama",
  plotly = FALSE
)
}
\arguments{
\item{object}{an aba model summary. The object to plot - this should be the
result of an \code{aba_summary()} call.}

\item{metric}{string. The metric to plot.}

\item{axis}{string. Specifies the x axis variable, color/fill variable, and
facet variable in that order. Should be a vector of length three that
includes only "predictor", "outcome", and "group" as values.}

\item{coord_flip}{logical. Whether to flip the x and y axes. This can be
useful when there are a large amount of predictor sets and you want to
view metrics vertically.}

\item{include_basic}{logical. Whether to include basic predictor.}

\item{sort}{logical. Whether to sort axis labels by metric value}

\item{palette}{string. Which ggpubr palette to use. See \code{ggpubr::set_palette}.}

\item{plotly}{logical. Whether to use plot.ly instead of standard ggplot.
Defaults to false. Using ggplotly can be useful if you want interactivity
on web pages.}
}
\value{
a ggplot of the specified aba model summary metric.
}
\description{
Plot metrics of an aba model summary
}
\examples{
# fit aba model
model <- aba_model() \%>\%
  set_data(adnimerge \%>\% dplyr::filter(VISCODE == 'bl')) \%>\%
  set_groups(everyone()) \%>\%
  set_outcomes(ConvertedToAlzheimers, CSF_ABETA_STATUS_bl) \%>\%
  set_predictors(
    PLASMA_ABETA_bl, PLASMA_PTAU181_bl, PLASMA_NFL_bl,
    c(PLASMA_ABETA_bl, PLASMA_PTAU181_bl, PLASMA_NFL_bl)
  ) \%>\%
  set_stats('glm') \%>\%
  fit()

# summarise aba model to calculate metrics
model_summary <- model \%>\% aba_summary()

# plot the metrics using default (defaults to AUC)
metric_plot <- model_summary \%>\% aba_plot_metric()

# coord flip
metric_plot2 <- model_summary \%>\% aba_plot_metric(coord_flip=TRUE)

# compare predictor sets within each outcome instead of the opposite
metric_plot3 <- model_summary \%>\%
  aba_plot_metric(axis = c('outcome','predictor', 'group'))
}
